Description

You are given an array a[ ] of n integers. The task is to find the smallest positive number missing from the array.



Input Format

First line - n, the size of an array Second line - all the n elements (a[i] can be positive, negative, zero)



Output Format

Print the smallest positive number missing from the array.



Sample Input

6

4 2 0 -1 1 -3



Sample Output

3
--------------------------------------------------------------------------------------------------CODE------------------------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>

// Utility function to swap two elements
void swap(int* a, int* b)
{
    int temp;
    temp = *a;
    *a = *b;
    *b = temp;
}

// Function to find the smallest positive missing number
int findMissing(int arr[], int size)
{
    // First, we separate positive and negative numbers
    int j = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] <= 0) {
            swap(&arr[i], &arr[j]);
            j++; // increment count of non-positive integers
        }
    }

    // Now, we ignore non-positive elements and consider only the part of the array which contains all positive elements
    int n = size - j;
    int* A = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++)
        A[i] = arr[i + j];

    // We mark elements as present by making them negative.
    // Note that 1 is subtracted because index start from 0 and positive numbers start from 1
    for (int i = 0; i < n; i++) {
        if (abs(A[i]) - 1 < n && A[abs(A[i]) - 1] > 0)
            A[abs(A[i]) - 1] = -A[abs(A[i]) - 1];
    }

    // Return the first index value at which is positive
    for (int i = 0; i < n; i++)
        if (A[i] > 0)
            return i + 1; // 1 is added because indexes start from 0

    free(A); // free the allocated memory
    return n + 1;
}

// Driver code
int main()
{
    int n;
  scanf("%d",&n);
  int arr[n];
  for(int i=0;i<n;i++)
  {
    scanf("%d",&arr[i]);
  }
    int arr_size = sizeof(arr) / sizeof(arr[0]);
    int missing = findMissing(arr, arr_size);
    printf("%d\n", missing);
    return 0;
}
